// Generated by Haxe 3.4.7
#ifndef INCLUDED_world_Level
#define INCLUDED_world_Level

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_4e87a8023b290038_4_new)
HX_DECLARE_CLASS1(world,Level)

namespace world{


class HXCPP_CLASS_ATTRIBUTES Level_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Level_obj OBJ_;
		Level_obj();

	public:
		enum { _hx_ClassId = 0x09431292 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="world.Level")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"world.Level"); }

		hx::ObjectPtr< Level_obj > __new() {
			hx::ObjectPtr< Level_obj > __this = new Level_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Level_obj > __alloc(hx::Ctx *_hx_ctx) {
			Level_obj *__this = (Level_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Level_obj), false, "world.Level"));
			*(void **)__this = Level_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_4e87a8023b290038_4_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Level_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Level","\x64","\x85","\x90","\x05"); }

};

} // end namespace world

#endif /* INCLUDED_world_Level */ 

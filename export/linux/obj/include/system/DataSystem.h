// Generated by Haxe 3.4.7
#ifndef INCLUDED_system_DataSystem
#define INCLUDED_system_DataSystem

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(flixel,math,FlxPoint)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)
HX_DECLARE_CLASS1(_hx_system,DataSystem)

namespace _hx_system{


class HXCPP_CLASS_ATTRIBUTES DataSystem_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef DataSystem_obj OBJ_;
		DataSystem_obj();

	public:
		enum { _hx_ClassId = 0x7e6d0134 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="system.DataSystem")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"system.DataSystem"); }

		hx::ObjectPtr< DataSystem_obj > __new() {
			hx::ObjectPtr< DataSystem_obj > __this = new DataSystem_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< DataSystem_obj > __alloc(hx::Ctx *_hx_ctx) {
			DataSystem_obj *__this = (DataSystem_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DataSystem_obj), false, "system.DataSystem"));
			*(void **)__this = DataSystem_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~DataSystem_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("DataSystem","\xd9","\x60","\x35","\xd5"); }

		static void save(::Array< ::Dynamic> points,Float rotation,Float size);
		static ::Dynamic save_dyn();

		static  ::Dynamic load();
		static ::Dynamic load_dyn();

};

} // end namespace system

#endif /* INCLUDED_system_DataSystem */ 

// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_haxe_Utf8
#include <haxe/Utf8.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_io_BytesOutput
#include <haxe/io/BytesOutput.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_hx_strings_StringBuilder
#include <hx/strings/StringBuilder.h>
#endif
#ifndef INCLUDED_hx_strings__StringBuilder_OutputWrapper
#include <hx/strings/_StringBuilder/OutputWrapper.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4e766a8f71f6c398_452_new,"hx.strings._StringBuilder.OutputWrapper","new",0xbe7087eb,"hx.strings._StringBuilder.OutputWrapper.new","hx/strings/StringBuilder.hx",452,0x236fa860)
HX_LOCAL_STACK_FRAME(_hx_pos_4e766a8f71f6c398_457_flush,"hx.strings._StringBuilder.OutputWrapper","flush",0x0afd530f,"hx.strings._StringBuilder.OutputWrapper.flush","hx/strings/StringBuilder.hx",457,0x236fa860)
HX_LOCAL_STACK_FRAME(_hx_pos_4e766a8f71f6c398_464_writeByte,"hx.strings._StringBuilder.OutputWrapper","writeByte",0xf0fe8552,"hx.strings._StringBuilder.OutputWrapper.writeByte","hx/strings/StringBuilder.hx",464,0x236fa860)
HX_LOCAL_STACK_FRAME(_hx_pos_4e766a8f71f6c398_474_writeString,"hx.strings._StringBuilder.OutputWrapper","writeString",0xfb69359b,"hx.strings._StringBuilder.OutputWrapper.writeString","hx/strings/StringBuilder.hx",474,0x236fa860)
namespace hx{
namespace strings{
namespace _StringBuilder{

void OutputWrapper_obj::__construct( ::hx::strings::StringBuilder sb){
            	HX_STACKFRAME(&_hx_pos_4e766a8f71f6c398_452_new)
HXDLIN( 452)		this->sb = sb;
            	}

Dynamic OutputWrapper_obj::__CreateEmpty() { return new OutputWrapper_obj; }

void *OutputWrapper_obj::_hx_vtable = 0;

Dynamic OutputWrapper_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< OutputWrapper_obj > _hx_result = new OutputWrapper_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool OutputWrapper_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3473efad) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x3473efad;
	} else {
		return inClassId==(int)0x46e0acfd;
	}
}

void OutputWrapper_obj::flush(){
            	HX_STACKFRAME(&_hx_pos_4e766a8f71f6c398_457_flush)
HXDLIN( 457)		bool _hx_tmp;
HXDLIN( 457)		if (hx::IsNotNull( this->bo )) {
HXDLIN( 457)			_hx_tmp = (this->bo->b->b->length > (int)0);
            		}
            		else {
HXDLIN( 457)			_hx_tmp = false;
            		}
HXDLIN( 457)		if (_hx_tmp) {
HXLINE( 458)			 ::hx::strings::StringBuilder _this = this->sb;
HXDLIN( 458)			::String item = this->bo->getBytes()->toString();
HXDLIN( 458)			{
HXLINE( 458)				 ::StringBuf _this1 = _this->sb;
HXDLIN( 458)				if (hx::IsNotNull( _this1->charBuf )) {
HXLINE( 458)					_this1->flush();
            				}
HXDLIN( 458)				if (hx::IsNull( _this1->b )) {
HXLINE( 458)					_this1->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(item));
            				}
            				else {
HXLINE( 458)					::Array< ::String > _this2 = _this1->b;
HXDLIN( 458)					_this2->push(::Std_obj::string(item));
            				}
            			}
HXDLIN( 458)			 ::hx::strings::StringBuilder _this3 = _this;
HXDLIN( 458)			int _this4 = _this3->len;
HXDLIN( 458)			int _hx_tmp1;
HXDLIN( 458)			if (hx::IsNull( item )) {
HXLINE( 458)				_hx_tmp1 = (int)0;
            			}
            			else {
HXLINE( 458)				_hx_tmp1 = ::haxe::Utf8_obj::length(item);
            			}
HXDLIN( 458)			_this3->len = (_this4 + _hx_tmp1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(OutputWrapper_obj,flush,(void))

void OutputWrapper_obj::writeByte(int c){
            	HX_GC_STACKFRAME(&_hx_pos_4e766a8f71f6c398_464_writeByte)
HXLINE( 465)		if (hx::IsNull( this->bo )) {
HXLINE( 465)			this->bo =  ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
            		}
HXLINE( 466)		this->bo->writeByte(c);
            	}


void OutputWrapper_obj::writeString(::String str){
            	HX_STACKFRAME(&_hx_pos_4e766a8f71f6c398_474_writeString)
HXLINE( 476)		this->flush();
HXLINE( 477)		{
HXLINE( 477)			 ::hx::strings::StringBuilder _this = this->sb;
HXDLIN( 477)			{
HXLINE( 477)				 ::StringBuf _this1 = _this->sb;
HXDLIN( 477)				if (hx::IsNotNull( _this1->charBuf )) {
HXLINE( 477)					_this1->flush();
            				}
HXDLIN( 477)				if (hx::IsNull( _this1->b )) {
HXLINE( 477)					_this1->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(str));
            				}
            				else {
HXLINE( 477)					::Array< ::String > _this2 = _this1->b;
HXDLIN( 477)					_this2->push(::Std_obj::string(str));
            				}
            			}
HXDLIN( 477)			 ::hx::strings::StringBuilder _this3 = _this;
HXDLIN( 477)			int _this4 = _this3->len;
HXDLIN( 477)			int _hx_tmp;
HXDLIN( 477)			if (hx::IsNull( str )) {
HXLINE( 477)				_hx_tmp = (int)0;
            			}
            			else {
HXLINE( 477)				_hx_tmp = ::haxe::Utf8_obj::length(str);
            			}
HXDLIN( 477)			_this3->len = (_this4 + _hx_tmp);
            		}
            	}



hx::ObjectPtr< OutputWrapper_obj > OutputWrapper_obj::__new( ::hx::strings::StringBuilder sb) {
	hx::ObjectPtr< OutputWrapper_obj > __this = new OutputWrapper_obj();
	__this->__construct(sb);
	return __this;
}

hx::ObjectPtr< OutputWrapper_obj > OutputWrapper_obj::__alloc(hx::Ctx *_hx_ctx, ::hx::strings::StringBuilder sb) {
	OutputWrapper_obj *__this = (OutputWrapper_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(OutputWrapper_obj), true, "hx.strings._StringBuilder.OutputWrapper"));
	*(void **)__this = OutputWrapper_obj::_hx_vtable;
	__this->__construct(sb);
	return __this;
}

OutputWrapper_obj::OutputWrapper_obj()
{
}

void OutputWrapper_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(OutputWrapper);
	HX_MARK_MEMBER_NAME(sb,"sb");
	HX_MARK_MEMBER_NAME(bo,"bo");
	HX_MARK_END_CLASS();
}

void OutputWrapper_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(sb,"sb");
	HX_VISIT_MEMBER_NAME(bo,"bo");
}

hx::Val OutputWrapper_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"sb") ) { return hx::Val( sb ); }
		if (HX_FIELD_EQ(inName,"bo") ) { return hx::Val( bo ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"flush") ) { return hx::Val( flush_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"writeByte") ) { return hx::Val( writeByte_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"writeString") ) { return hx::Val( writeString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val OutputWrapper_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"sb") ) { sb=inValue.Cast<  ::hx::strings::StringBuilder >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bo") ) { bo=inValue.Cast<  ::haxe::io::BytesOutput >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void OutputWrapper_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("sb","\x8f","\x64","\x00","\x00"));
	outFields->push(HX_HCSTRING("bo","\xcd","\x55","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo OutputWrapper_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::hx::strings::StringBuilder*/ ,(int)offsetof(OutputWrapper_obj,sb),HX_HCSTRING("sb","\x8f","\x64","\x00","\x00")},
	{hx::fsObject /*::haxe::io::BytesOutput*/ ,(int)offsetof(OutputWrapper_obj,bo),HX_HCSTRING("bo","\xcd","\x55","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *OutputWrapper_obj_sStaticStorageInfo = 0;
#endif

static ::String OutputWrapper_obj_sMemberFields[] = {
	HX_HCSTRING("sb","\x8f","\x64","\x00","\x00"),
	HX_HCSTRING("bo","\xcd","\x55","\x00","\x00"),
	HX_HCSTRING("flush","\xc4","\x62","\x9b","\x02"),
	HX_HCSTRING("writeByte","\x87","\x13","\xd7","\x49"),
	HX_HCSTRING("writeString","\x10","\x7b","\x29","\xa6"),
	::String(null()) };

static void OutputWrapper_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(OutputWrapper_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void OutputWrapper_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(OutputWrapper_obj::__mClass,"__mClass");
};

#endif

hx::Class OutputWrapper_obj::__mClass;

void OutputWrapper_obj::__register()
{
	hx::Object *dummy = new OutputWrapper_obj;
	OutputWrapper_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hx.strings._StringBuilder.OutputWrapper","\x79","\xb6","\x25","\x90");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = OutputWrapper_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(OutputWrapper_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< OutputWrapper_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = OutputWrapper_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OutputWrapper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OutputWrapper_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace strings
} // end namespace _StringBuilder

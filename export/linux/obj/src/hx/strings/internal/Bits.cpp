// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_hx_strings_internal_Bits
#include <hx/strings/internal/Bits.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8aa286964f949adf_22_clearBit,"hx.strings.internal.Bits","clearBit",0x54c006a1,"hx.strings.internal.Bits.clearBit","hx/strings/internal/Bits.hx",22,0x7921fcd2)
HX_LOCAL_STACK_FRAME(_hx_pos_8aa286964f949adf_33_setBit,"hx.strings.internal.Bits","setBit",0x8092cd6c,"hx.strings.internal.Bits.setBit","hx/strings/internal/Bits.hx",33,0x7921fcd2)
HX_LOCAL_STACK_FRAME(_hx_pos_8aa286964f949adf_44_toggleBit,"hx.strings.internal.Bits","toggleBit",0xdcd18918,"hx.strings.internal.Bits.toggleBit","hx/strings/internal/Bits.hx",44,0x7921fcd2)
HX_LOCAL_STACK_FRAME(_hx_pos_8aa286964f949adf_57_getBit,"hx.strings.internal.Bits","getBit",0xb44a78f8,"hx.strings.internal.Bits.getBit","hx/strings/internal/Bits.hx",57,0x7921fcd2)
namespace hx{
namespace strings{
namespace internal{

void Bits_obj::__construct() { }

Dynamic Bits_obj::__CreateEmpty() { return new Bits_obj; }

void *Bits_obj::_hx_vtable = 0;

Dynamic Bits_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Bits_obj > _hx_result = new Bits_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Bits_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1f87f471;
}

int Bits_obj::clearBit(int num,int bitPos){
            	HX_STACKFRAME(&_hx_pos_8aa286964f949adf_22_clearBit)
HXDLIN(  22)		return ((int)num & (int)~(((int)(int)1 << (int)(bitPos - (int)1))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bits_obj,clearBit,return )

int Bits_obj::setBit(int num,int bitPos){
            	HX_STACKFRAME(&_hx_pos_8aa286964f949adf_33_setBit)
HXDLIN(  33)		return ((int)num | (int)((int)(int)1 << (int)(bitPos - (int)1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bits_obj,setBit,return )

int Bits_obj::toggleBit(int num,int bitPos){
            	HX_STACKFRAME(&_hx_pos_8aa286964f949adf_44_toggleBit)
HXDLIN(  44)		return ((int)num ^ (int)((int)(int)1 << (int)(bitPos - (int)1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bits_obj,toggleBit,return )

bool Bits_obj::getBit(int num,int bitPos){
            	HX_STACKFRAME(&_hx_pos_8aa286964f949adf_57_getBit)
HXDLIN(  57)		return ((int)1 == ((int)((int)num >> (int)(bitPos - (int)1)) & (int)(int)1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bits_obj,getBit,return )


Bits_obj::Bits_obj()
{
}

bool Bits_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"setBit") ) { outValue = setBit_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBit") ) { outValue = getBit_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"clearBit") ) { outValue = clearBit_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"toggleBit") ) { outValue = toggleBit_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Bits_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Bits_obj_sStaticStorageInfo = 0;
#endif

static void Bits_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Bits_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Bits_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Bits_obj::__mClass,"__mClass");
};

#endif

hx::Class Bits_obj::__mClass;

static ::String Bits_obj_sStaticFields[] = {
	HX_HCSTRING("clearBit","\x40","\xb5","\x06","\x31"),
	HX_HCSTRING("setBit","\x4b","\x46","\x62","\x6f"),
	HX_HCSTRING("toggleBit","\x99","\xa5","\x63","\xbe"),
	HX_HCSTRING("getBit","\xd7","\xf1","\x19","\xa3"),
	::String(null())
};

void Bits_obj::__register()
{
	hx::Object *dummy = new Bits_obj;
	Bits_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hx.strings.internal.Bits","\x2d","\xbf","\x6e","\x62");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Bits_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Bits_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Bits_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Bits_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Bits_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Bits_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Bits_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace strings
} // end namespace internal

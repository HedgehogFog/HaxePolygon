// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_hx_strings_internal__Either2_Either2_Impl_
#include <hx/strings/internal/_Either2/Either2_Impl_.h>
#endif
#ifndef INCLUDED_hx_strings_internal__Either2__Either2
#include <hx/strings/internal/_Either2/_Either2.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8ea75567c28cb227_17__new,"hx.strings.internal._Either2.Either2_Impl_","_new",0x5fd5527b,"hx.strings.internal._Either2.Either2_Impl_._new","hx/strings/internal/Either2.hx",17,0x57069877)
HX_LOCAL_STACK_FRAME(_hx_pos_8ea75567c28cb227_24_get_value,"hx.strings.internal._Either2.Either2_Impl_","get_value",0x2b35e06e,"hx.strings.internal._Either2.Either2_Impl_.get_value","hx/strings/internal/Either2.hx",24,0x57069877)
HX_LOCAL_STACK_FRAME(_hx_pos_8ea75567c28cb227_30_fromA,"hx.strings.internal._Either2.Either2_Impl_","fromA",0x854d513d,"hx.strings.internal._Either2.Either2_Impl_.fromA","hx/strings/internal/Either2.hx",30,0x57069877)
HX_LOCAL_STACK_FRAME(_hx_pos_8ea75567c28cb227_36_fromB,"hx.strings.internal._Either2.Either2_Impl_","fromB",0x854d513e,"hx.strings.internal._Either2.Either2_Impl_.fromB","hx/strings/internal/Either2.hx",36,0x57069877)
namespace hx{
namespace strings{
namespace internal{
namespace _Either2{

void Either2_Impl__obj::__construct() { }

Dynamic Either2_Impl__obj::__CreateEmpty() { return new Either2_Impl__obj; }

void *Either2_Impl__obj::_hx_vtable = 0;

Dynamic Either2_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Either2_Impl__obj > _hx_result = new Either2_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Either2_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x347f2210;
}

 ::hx::strings::internal::_Either2::_Either2 Either2_Impl__obj::_new( ::hx::strings::internal::_Either2::_Either2 value){
            	HX_STACKFRAME(&_hx_pos_8ea75567c28cb227_17__new)
HXDLIN(  17)		 ::hx::strings::internal::_Either2::_Either2 this1 = value;
HXDLIN(  17)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Either2_Impl__obj,_new,return )

 ::hx::strings::internal::_Either2::_Either2 Either2_Impl__obj::get_value( ::hx::strings::internal::_Either2::_Either2 this1){
            	HX_STACKFRAME(&_hx_pos_8ea75567c28cb227_24_get_value)
HXDLIN(  24)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Either2_Impl__obj,get_value,return )

 ::hx::strings::internal::_Either2::_Either2 Either2_Impl__obj::fromA( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_8ea75567c28cb227_30_fromA)
HXDLIN(  30)		 ::hx::strings::internal::_Either2::_Either2 this1 = ::hx::strings::internal::_Either2::_Either2_obj::a(value);
HXDLIN(  30)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Either2_Impl__obj,fromA,return )

 ::hx::strings::internal::_Either2::_Either2 Either2_Impl__obj::fromB( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_8ea75567c28cb227_36_fromB)
HXDLIN(  36)		 ::hx::strings::internal::_Either2::_Either2 this1 = ::hx::strings::internal::_Either2::_Either2_obj::b(value);
HXDLIN(  36)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Either2_Impl__obj,fromB,return )


Either2_Impl__obj::Either2_Impl__obj()
{
}

bool Either2_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"fromA") ) { outValue = fromA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromB") ) { outValue = fromB_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_value") ) { outValue = get_value_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Either2_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Either2_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Either2_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Either2_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Either2_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Either2_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Either2_Impl__obj::__mClass;

static ::String Either2_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("get_value","\xc8","\xdb","\x61","\x75"),
	HX_HCSTRING("fromA","\x97","\x17","\x8e","\x06"),
	HX_HCSTRING("fromB","\x98","\x17","\x8e","\x06"),
	::String(null())
};

void Either2_Impl__obj::__register()
{
	hx::Object *dummy = new Either2_Impl__obj;
	Either2_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hx.strings.internal._Either2.Either2_Impl_","\x94","\x39","\x3b","\xea");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Either2_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Either2_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Either2_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Either2_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Either2_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Either2_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Either2_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace strings
} // end namespace internal
} // end namespace _Either2

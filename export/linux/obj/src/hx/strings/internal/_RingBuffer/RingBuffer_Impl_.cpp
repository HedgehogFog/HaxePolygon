// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_hx_strings_internal__RingBuffer_RingBufferImpl
#include <hx/strings/internal/_RingBuffer/RingBufferImpl.h>
#endif
#ifndef INCLUDED_hx_strings_internal__RingBuffer_RingBuffer_Impl_
#include <hx/strings/internal/_RingBuffer/RingBuffer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_3cebf4ff2b9d9354_20__new,"hx.strings.internal._RingBuffer.RingBuffer_Impl_","_new",0x6dde28f9,"hx.strings.internal._RingBuffer.RingBuffer_Impl_._new","hx/strings/internal/RingBuffer.hx",20,0xc9fcbcc8)
HX_LOCAL_STACK_FRAME(_hx_pos_3cebf4ff2b9d9354_27_get,"hx.strings.internal._RingBuffer.RingBuffer_Impl_","get",0x6589e7fe,"hx.strings.internal._RingBuffer.RingBuffer_Impl_.get","hx/strings/internal/RingBuffer.hx",27,0xc9fcbcc8)
namespace hx{
namespace strings{
namespace internal{
namespace _RingBuffer{

void RingBuffer_Impl__obj::__construct() { }

Dynamic RingBuffer_Impl__obj::__CreateEmpty() { return new RingBuffer_Impl__obj; }

void *RingBuffer_Impl__obj::_hx_vtable = 0;

Dynamic RingBuffer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< RingBuffer_Impl__obj > _hx_result = new RingBuffer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool RingBuffer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7b510310;
}

 ::hx::strings::internal::_RingBuffer::RingBufferImpl RingBuffer_Impl__obj::_new(int size){
            	HX_GC_STACKFRAME(&_hx_pos_3cebf4ff2b9d9354_20__new)
HXDLIN(  20)		 ::hx::strings::internal::_RingBuffer::RingBufferImpl this1 =  ::hx::strings::internal::_RingBuffer::RingBufferImpl_obj::__alloc( HX_CTX ,size);
HXDLIN(  20)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(RingBuffer_Impl__obj,_new,return )

 ::Dynamic RingBuffer_Impl__obj::get( ::hx::strings::internal::_RingBuffer::RingBufferImpl this1,int index){
            	HX_STACKFRAME(&_hx_pos_3cebf4ff2b9d9354_27_get)
HXDLIN(  27)		return this1->get(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(RingBuffer_Impl__obj,get,return )


RingBuffer_Impl__obj::RingBuffer_Impl__obj()
{
}

bool RingBuffer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *RingBuffer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *RingBuffer_Impl__obj_sStaticStorageInfo = 0;
#endif

static void RingBuffer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(RingBuffer_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void RingBuffer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(RingBuffer_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class RingBuffer_Impl__obj::__mClass;

static ::String RingBuffer_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	::String(null())
};

void RingBuffer_Impl__obj::__register()
{
	hx::Object *dummy = new RingBuffer_Impl__obj;
	RingBuffer_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hx.strings.internal._RingBuffer.RingBuffer_Impl_","\xd6","\xf3","\x9d","\x1d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &RingBuffer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = RingBuffer_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(RingBuffer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< RingBuffer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = RingBuffer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RingBuffer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RingBuffer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hx
} // end namespace strings
} // end namespace internal
} // end namespace _RingBuffer
